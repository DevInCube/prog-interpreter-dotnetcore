{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Prog",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#var-expr"
		},
		{
			"include": "#numeric-literal"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comment"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.prog",
				"match": "\\b(if|else|while)\\b"
			}]
		},
		"var-expr": {
			"patterns": [{
				"name": "storage.modifier.prog",
				"match": "\\b(let|none|true|false)\\b"
			}]
		},
		"numeric-literal": {
			"patterns": [{
				"name": "constant.numeric.prog",
				"match": "(?x)\n(?<!\\$)(?:\n  (?:\\b[0-9]+(\\.)[0-9]+[eE][+-]?[0-9]+\\b)| # 1.1E+3\n  (?:\\b[0-9]+(\\.)[eE][+-]?[0-9]+\\b)|       # 1.E+3\n  (?:\\B(\\.)[0-9]+[eE][+-]?[0-9]+\\b)|       # .1E+3\n  (?:\\b[0-9]+[eE][+-]?[0-9]+\\b)|            # 1E+3\n  (?:\\b[0-9]+(\\.)[0-9]+\\b)|                # 1.1\n  (?:\\b[0-9]+(\\.)\\B)|                      # 1.\n  (?:\\B(\\.)[0-9]+\\b)|                      # .1\n  (?:\\b[0-9]+\\b(?!\\.))                     # 1\n)(?!\\$)"
			}]
		},
		"strings": {
			"name": "string.quoted.double.prog",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.prog",
					"match": "\\\\."
				}
			]
		},
		"comment": {
			"patterns": [{
				"begin": "(^[ \\t]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
				"beginCaptures": {
					"1": {
						"name": "punctuation.whitespace.comment.leading.js"
					},
					"2": {
						"name": "comment.line.double-slash.js"
					},
					"3": {
						"name": "punctuation.definition.comment.js"
					},
					"4": {
						"name": "storage.type.internaldeclaration.js"
					},
					"5": {
						"name": "punctuation.decorator.internaldeclaration.js"
					}
				},
				"end": "(?=$)",
				"contentName": "comment.line.double-slash.prog"
			}]
		}
	},
	"scopeName": "source.prog"
}